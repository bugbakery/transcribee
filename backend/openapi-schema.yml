openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/documents/:
    get:
      operationId: listDocuments
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
          description: ''
      tags:
      - api
    post:
      operationId: createDocument
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
      tags:
      - api
  /api/v1/documents/{id}/:
    get:
      operationId: retrieveDocument
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
      tags:
      - api
    put:
      operationId: updateDocument
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateDocument
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyDocument
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/documents/{id}/tasks/:
    get:
      operationId: tasksTask
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
  /api/v1/users/me/:
    get:
      operationId: meUserCreate
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
      tags:
      - api
  /api/v1/tasks/:
    get:
      operationId: listTasks
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
    post:
      operationId: createTask
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
  /api/v1/tasks/{id}/:
    get:
      operationId: retrieveTask
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
  /api/v1/users/:
    post:
      operationId: createUserCreate
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
      tags:
      - api
  /api/v1/users/login/:
    post:
      operationId: loginUserCreate
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
      tags:
      - api
  /api/v1/tasks/claim_unassigned_task/:
    post:
      operationId: claimUnassignedTaskTask
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
  /api/v1/tasks/{id}/keepalive/:
    post:
      operationId: keepaliveKeepalive
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Keepalive'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Keepalive'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Keepalive'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keepalive'
          description: ''
      tags:
      - api
  /api/v1/tasks/{id}/mark_completed/:
    post:
      operationId: markCompletedTaskComplete
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskComplete'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskComplete'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskComplete'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskComplete'
          description: ''
      tags:
      - api
components:
  schemas:
    Document:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        audio_file:
          type: string
          format: binary
        created_at:
          type: string
          format: date-time
          readOnly: true
        changed_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
      - audio_file
    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        document:
          type: string
        task_type:
          enum:
          - DIARIZE
          - TRANSCRIBE
          - ALIGN
          type: string
        progress:
          type: number
          readOnly: true
          nullable: true
        task_parameters:
          type: object
          description: Task parameters like language, number of speakers, ...
        assigned_worker:
          type: string
          readOnly: true
          nullable: true
        last_keepalive:
          type: string
          format: date-time
          readOnly: true
        assigned_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        completed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        completion_data:
          type: object
          readOnly: true
        dependency:
          type: array
          items:
            type: string
      required:
      - document
      - task_type
    UserCreate:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - username
      - password
    UnauthenticatedError:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    ForbiddenError:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    ValidationError:
      type: object
      properties:
        errors:
          type: object
        non_field_errors:
          type: array
          items:
            type: string
      required:
      - errors
      - non_field_errors
    NotFoundError:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    Token:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    Keepalive:
      type: object
      properties:
        progress:
          type: number
    TaskComplete:
      type: object
      properties:
        completion_data:
          type: object
      required:
      - completion_data
